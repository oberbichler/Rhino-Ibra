on:
  push:
    tags:
      - 'v*'

name: Create Release

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Download vswhere
        run: |
          curl -L https://github.com/microsoft/vswhere/releases/download/2.7.1/vswhere.exe --output vswhere.exe
        shell: cmd
      - name: Download nuget
        run: |
          curl -L https://dist.nuget.org/win-x86-commandline/latest/nuget.exe --output nuget.exe
        shell: cmd
      - name: Restore packages
        run: |
          .\nuget restore .
      - name: Patch AssemblyInfo
        run: |
          .\script\patch_assemblyinfo.ps1 -tag ${{ github.ref }} -path .\IbraExport
          .\script\patch_assemblyinfo.ps1 -tag ${{ github.ref }} -path .\IbraImport
          .\script\patch_assemblyinfo.ps1 -tag ${{ github.ref }} -path .\IbraTools
      - name: Build
        run: |
          setlocal enabledelayedexpansion
          for /f "usebackq tokens=*" %%i in (`vswhere -latest -requires Microsoft.Component.MSBuild -find MSBuild\**\Bin\MSBuild.exe`) do (
            "%%i" %*
            exit /b !errorlevel!
          )
        shell: cmd
      - name: Create archive
        run: |
          7z a -tzip Rhino-Ibra.zip ./IbraExport/bin/IbraExport.rhp ./IbraImport/bin/IbraImport.rhp ./IbraTools/bin/IbraTools.rhp ./IbraImport/bin/Newtonsoft.Json.dll
        shell: cmd
      - name: Upload archive
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./Rhino-Ibra.zip
          asset_name: Rhino-Ibra.zip
          tag: ${{ github.ref }}
          overwrite: true
      - name: Create and publish yak packages
        env:
          YAK_TOKEN: ${{ secrets.YAK_TOKEN }}
        run: |
          .\script\deploy_yak.ps1 -tag ${{ github.ref }} -path .\IbraExport
          .\script\deploy_yak.ps1 -tag ${{ github.ref }} -path .\IbraImport
          .\script\deploy_yak.ps1 -tag ${{ github.ref }} -path .\IbraTools
